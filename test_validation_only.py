#!/usr/bin/env python3
"""
üß™ –¢–ï–°–¢ –í–ê–õ–Ü–î–ê–¶–Ü–á –§–ê–ô–õ–Ü–í –ë–ï–ó AIOGRAM
"""

import sys
import os
import tempfile

print("üöÄ –¢–µ—Å—Ç—É—î–º–æ —Å–∏—Å—Ç–µ–º—É –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó —Ñ–∞–π–ª—ñ–≤...")

try:
    from utils.file_validation import (
        comprehensive_file_validation, create_validation_report, 
        get_supported_formats_text, SUPPORTED_EXTENSIONS
    )
    
    print(f"‚úÖ –ü—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ —Ñ–æ—Ä–º–∞—Ç–∏: {list(SUPPORTED_EXTENSIONS.keys())}")
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª
    with tempfile.NamedTemporaryFile(mode='w', suffix='.txt', delete=False, encoding='utf-8') as f:
        test_content = "–¶–µ —Ç–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó.\nThis is a test file for validation.\n" * 100
        f.write(test_content)
        test_file_path = f.name
    
    print(f"üìù –°—Ç–≤–æ—Ä–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª: {test_file_path}")
    print(f"üìä –†–æ–∑–º—ñ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç—É: {len(test_content)} —Å–∏–º–≤–æ–ª—ñ–≤")
    
    # –¢–µ—Å—Ç –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
    result = comprehensive_file_validation(test_file_path, "test.txt")
    
    print(f"\nüîç –†–ï–ó–£–õ–¨–¢–ê–¢ –í–ê–õ–Ü–î–ê–¶–Ü–á:")
    print(f"‚úÖ –í–∞–ª—ñ–¥–Ω–∞: {result.is_valid}")
    if result.is_valid:
        print(f"üìÑ –¢–∏–ø: {result.file_type}")
        print(f"üìä –†–æ–∑–º—ñ—Ä: {result.size_bytes:,} –±–∞–π—Ç")
        print(f"üî§ –°–∏–º–≤–æ–ª—ñ–≤: {result.char_count:,}")
        print(f"üí∞ –í–∞—Ä—Ç—ñ—Å—Ç—å: {result.estimated_cost}‚Ç¨")
        print(f"‚è±Ô∏è –ß–∞—Å –æ–±—Ä–æ–±–∫–∏: {result.processing_time_estimate}—Å")
        print(f"üîß MIME: {result.mime_type}")
        if result.encoding:
            print(f"üìù –ö–æ–¥—É–≤–∞–Ω–Ω—è: {result.encoding}")
    else:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {result.error_message}")
    
    # –¢–µ—Å—Ç –∑–≤—ñ—Ç—É
    report = create_validation_report(result)
    print(f"\nüìã –ó–í–Ü–¢ –í–ê–õ–Ü–î–ê–¶–Ü–á:")
    print(report)
    
    # –¢–µ—Å—Ç –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏—Ö —Ñ–æ—Ä–º–∞—Ç—ñ–≤
    formats_text = get_supported_formats_text()
    print(f"\nüìã –ü–Ü–î–¢–†–ò–ú–£–í–ê–ù–Ü –§–û–†–ú–ê–¢–ò:")
    print(formats_text[:300] + "...")
    
    # –û—á–∏—â–µ–Ω–Ω—è
    os.unlink(test_file_path)
    
    print("\n‚úÖ –í–°–Ü –¢–ï–°–¢–ò –ü–†–û–ô–î–ï–ù–û –£–°–ü–Ü–®–ù–û!")
    
except Exception as e:
    print(f"‚ùå –ü–û–ú–ò–õ–ö–ê: {e}")
    import traceback
    traceback.print_exc()