#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ—ó debug —Å–∏—Å—Ç–µ–º–∏ - –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —â–æ –≤—Å–µ –ø—Ä–∞—Ü—é—î –±–µ–∑ aiogram
"""

print("üß™ –¢–µ—Å—Ç—É—î–º–æ –ø—Ä–æ—Å—Ç—É debug —Å–∏—Å—Ç–µ–º—É...")

# –¢–µ—Å—Ç 1: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–º–ø–æ—Ä—Ç—É simple_debug
try:
    from utils.simple_debug import debug_callback, log_action, log_state_transition, log_user_flow
    print("‚úÖ –¢–µ—Å—Ç 1: –Ü–º–ø–æ—Ä—Ç utils.simple_debug - —É—Å–ø—ñ—à–Ω–æ")
except Exception as e:
    print(f"‚ùå –¢–µ—Å—Ç 1: –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É utils.simple_debug: {e}")

# –¢–µ—Å—Ç 2: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
try:
    log_action("test_action", 12345, "testing basic logging")
    print("‚úÖ –¢–µ—Å—Ç 2: –ë–∞–∑–æ–≤–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è - —É—Å–ø—ñ—à–Ω–æ")
except Exception as e:
    print(f"‚ùå –¢–µ—Å—Ç 2: –ü–æ–º–∏–ª–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è: {e}")

# –¢–µ—Å—Ç 3: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ—Ö–æ–¥—ñ–≤
try:
    log_state_transition(12345, "state_old", "state_new", "test_trigger")
    print("‚úÖ –¢–µ—Å—Ç 3: –õ–æ–≥—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ—Ö–æ–¥—ñ–≤ - —É—Å–ø—ñ—à–Ω–æ")
except Exception as e:
    print(f"‚ùå –¢–µ—Å—Ç 3: –ü–æ–º–∏–ª–∫–∞ –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ—Ö–æ–¥—ñ–≤: {e}")

# –¢–µ—Å—Ç 4: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ user flow
try:
    log_user_flow(12345, "test_step", {"data": "test"})
    print("‚úÖ –¢–µ—Å—Ç 4: User flow –ª–æ–≥—É–≤–∞–Ω–Ω—è - —É—Å–ø—ñ—à–Ω–æ")
except Exception as e:
    print(f"‚ùå –¢–µ—Å—Ç 4: –ü–æ–º–∏–ª–∫–∞ user flow –ª–æ–≥—É–≤–∞–Ω–Ω—è: {e}")

# –¢–µ—Å—Ç 5: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ (–±–µ–∑ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è)
try:
    @debug_callback
    async def test_func():
        return "test"
    
    print("‚úÖ –¢–µ—Å—Ç 5: –î–µ–∫–æ—Ä–∞—Ç–æ—Ä debug_callback - —É—Å–ø—ñ—à–Ω–æ")
except Exception as e:
    print(f"‚ùå –¢–µ—Å—Ç 5: –ü–æ–º–∏–ª–∫–∞ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞: {e}")

# –¢–µ—Å—Ç 6: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ª–æ–≥—ñ–≤
import os
try:
    if os.path.exists('logs/bot_debug.log'):
        print("‚úÖ –¢–µ—Å—Ç 6: –§–∞–π–ª –ª–æ–≥—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–æ - —É—Å–ø—ñ—à–Ω–æ")
        
        # –ß–∏—Ç–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ —Ä—è–¥–∫–∏
        with open('logs/bot_debug.log', 'r') as f:
            lines = f.readlines()
            if lines:
                print(f"üìÑ –û—Å—Ç–∞–Ω–Ω—ñ–π –ª–æ–≥: {lines[-1].strip()}")
    else:
        print("‚ö†Ô∏è –¢–µ—Å—Ç 6: –§–∞–π–ª –ª–æ–≥—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
except Exception as e:
    print(f"‚ùå –¢–µ—Å—Ç 6: –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è –ª–æ–≥—ñ–≤: {e}")

print("\nüéØ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
print("üöÄ –ü—Ä–æ—Å—Ç–µ debug —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–æ —Ä–æ–±–æ—Ç–∏!")