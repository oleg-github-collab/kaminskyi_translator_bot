from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config import DEEPL_LANGUAGES, OTRANSLATOR_LANGUAGES, ALL_LANGUAGES_WITH_FLAGS, MODELS

def get_model_keyboard(user_lang: str = "en"):
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –≤–∏–±–æ—Ä—É –º–æ–¥–µ–ª—ñ –ø–µ—Ä–µ–∫–ª–∞–¥—É"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        InlineKeyboardButton("‚ö° Kaminskyi Basic", callback_data="model_basic"),
        InlineKeyboardButton("üéØ Kaminskyi Epic", callback_data="model_epic")
    )
    return keyboard

def get_language_keyboard(model="basic", page=0):
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –≤–∏–±–æ—Ä—É –º–æ–≤–∏ –∑ –ø–æ–≤–Ω–∏–º —Å–ø–∏—Å–∫–æ–º —Ç–∞ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é"""
    
    # 1. –í–ò–ë–Ü–† –ú–û–í –ó–ê–õ–ï–ñ–ù–û –í–Ü–î –ú–û–î–ï–õ–Ü
    if model == "basic":
        available_languages = DEEPL_LANGUAGES
    elif model == "epic":
        available_languages = OTRANSLATOR_LANGUAGES
    else:
        available_languages = ALL_LANGUAGES_WITH_FLAGS
    
    # 2. –°–¢–í–û–†–ï–ù–ù–Ø –°–ü–ò–°–ö–£ –ó –ü–†–ê–ü–û–†–ê–ú–ò
    language_list = []
    for lang_code, lang_name in available_languages.items():
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫—Ä–∞—Å–∏–≤—É –Ω–∞–∑–≤—É –∑ –ø—Ä–∞–ø–æ—Ä–æ–º –¥–ª—è –í–°–Ü –º–æ–≤
        display_name = ALL_LANGUAGES_WITH_FLAGS.get(lang_code, lang_name)
        language_list.append((lang_code, display_name))
    
    # 3. –°–û–†–¢–£–í–ê–ù–ù–Ø –ó–ê –ê–õ–§–ê–í–Ü–¢–û–ú
    language_list.sort(key=lambda x: x[1])
    
    # 4. –ü–ê–ì–Ü–ù–ê–¶–Ü–Ø
    languages_per_page = 12  # 6 —Ä—è–¥–∫—ñ–≤ –ø–æ 2 –º–æ–≤–∏
    total_languages = len(language_list)
    total_pages = (total_languages + languages_per_page - 1) // languages_per_page
    
    # –û–±–º–µ–∂—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É
    if page < 0:
        page = 0
    elif page >= total_pages:
        page = total_pages - 1 if total_pages > 0 else 0
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –º–æ–≤–∏ –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    start_index = page * languages_per_page
    end_index = min(start_index + languages_per_page, total_languages)
    current_page_languages = language_list[start_index:end_index]
    
    # 5. –°–¢–í–û–†–ï–ù–ù–Ø –ö–õ–ê–í–Ü–ê–¢–£–†–ò
    keyboard = InlineKeyboardMarkup()
    
    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –º–æ–≤ –ø–æ 2 –≤ —Ä—è–¥–∫—É
    for i in range(0, len(current_page_languages), 2):
        row = []
        
        # –ü–µ—Ä—à–∞ –º–æ–≤–∞ –≤ —Ä—è–¥–∫—É
        lang_code, lang_name = current_page_languages[i]
        button_text = lang_name[:18] + "..." if len(lang_name) > 18 else lang_name
        row.append(InlineKeyboardButton(button_text, callback_data=f"lang_{lang_code}"))
        
        # –î—Ä—É–≥–∞ –º–æ–≤–∞ –≤ —Ä—è–¥–∫—É (—è–∫—â–æ —î)
        if i + 1 < len(current_page_languages):
            lang_code, lang_name = current_page_languages[i + 1]
            button_text = lang_name[:18] + "..." if len(lang_name) > 18 else lang_name
            row.append(InlineKeyboardButton(button_text, callback_data=f"lang_{lang_code}"))
        
        keyboard.row(*row)
    
    # 6. –ù–ê–í–Ü–ì–ê–¶–Ü–ô–ù–Ü –ö–ù–û–ü–ö–ò
    if total_pages > 1:
        nav_row = []
        
        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        if page > 0:
            nav_row.append(InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"lang_page_{page-1}"))
        
        # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥"  
        if page < total_pages - 1:
            nav_row.append(InlineKeyboardButton("–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è", callback_data=f"lang_page_{page+1}"))
        
        if nav_row:
            keyboard.row(*nav_row)
        
        # –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        page_info = f"üìÑ –°—Ç–æ—Ä—ñ–Ω–∫–∞ {page + 1} –∑ {total_pages} ‚Ä¢ {total_languages} –º–æ–≤"
        keyboard.row(InlineKeyboardButton(page_info, callback_data="page_info"))
    
    return keyboard

def get_continue_keyboard(user_lang: str = "en"):
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("üîÑ –ù–æ–≤–∏–π –ø–µ—Ä–µ–∫–ª–∞–¥", callback_data="continue_translate"),
        InlineKeyboardButton("üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª", callback_data="upload_file")
    )
    keyboard.add(
        InlineKeyboardButton("üìä –ú–æ—ó –ø–µ—Ä–µ–∫–ª–∞–¥–∏", callback_data="my_translations"),
        InlineKeyboardButton("‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è", callback_data="settings")
    )
    keyboard.add(InlineKeyboardButton("üìû –ü—ñ–¥—Ç—Ä–∏–º–∫–∞", callback_data="contact_support"))
    return keyboard

def get_payment_keyboard(amount: float = None, model: str = None):
    """–†–æ–∑—à–∏—Ä–µ–Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –æ–ø–ª–∞—Ç–∏"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    payment_text = f"üí≥ –°–ø–ª–∞—Ç–∏—Ç–∏ {amount}‚Ç¨" if amount else "üí≥ –û–ø–ª–∞—Ç–∏—Ç–∏"
    keyboard.add(InlineKeyboardButton(payment_text, callback_data="process_payment"))
    
    keyboard.add(InlineKeyboardButton("üìä –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è", callback_data="payment_details"))
    keyboard.add(InlineKeyboardButton("‚ùì –Ø–∫ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –æ–ø–ª–∞—Ç–∞?", callback_data="payment_help"))
    keyboard.add(InlineKeyboardButton("üîÑ –í–∏–±—Ä–∞—Ç–∏ —ñ–Ω—à–∏–π —Ñ–∞–π–ª", callback_data="upload_another"))
    keyboard.add(InlineKeyboardButton("‚öôÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ –º–æ–¥–µ–ª—å", callback_data="change_model"))
    
    return keyboard

def get_file_action_keyboard(file_info: dict = None):
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥—ñ–π –∑ —Ñ–∞–π–ª–æ–º –∑ –¥–µ—Ç–∞–ª—å–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    if file_info and file_info.get('amount'):
        keyboard.add(InlineKeyboardButton(f"üí≥ –°–ø–ª–∞—Ç–∏—Ç–∏ {file_info['amount']}‚Ç¨", callback_data="process_payment"))
    else:
        keyboard.add(InlineKeyboardButton("üí≥ –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –æ–ø–ª–∞—Ç–∏", callback_data="process_payment"))
    
    keyboard.add(InlineKeyboardButton("üìä –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¥–µ—Ç–∞–ª—ñ", callback_data="file_details"))
    keyboard.add(InlineKeyboardButton("‚öôÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ –º–æ–¥–µ–ª—å", callback_data="change_model"))
    keyboard.add(InlineKeyboardButton("üîÑ –Ü–Ω—à–∏–π —Ñ–∞–π–ª", callback_data="upload_another"))
    keyboard.add(InlineKeyboardButton("‚ùì –î–æ–ø–æ–º–æ–≥–∞", callback_data="help"))
    
    return keyboard

def get_payment_action_keyboard():
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥—ñ–π –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(InlineKeyboardButton("üöÄ –ü–æ—á–∞—Ç–∏ –ø–µ—Ä–µ–∫–ª–∞–¥", callback_data="start_translation"))
    keyboard.add(InlineKeyboardButton("üßæ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —á–µ–∫", callback_data="view_receipt"))
    keyboard.add(InlineKeyboardButton("üîÑ –ù–æ–≤–∏–π –ø–µ—Ä–µ–∫–ª–∞–¥", callback_data="upload_another"))
    keyboard.add(InlineKeyboardButton("üìû –ü—ñ–¥—Ç—Ä–∏–º–∫–∞", callback_data="contact_support"))
    return keyboard