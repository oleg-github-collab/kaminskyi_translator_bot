from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config import DEEPL_LANGUAGES, OTRANSLATOR_LANGUAGES, COMMON_LANGUAGES, MODELS

def get_model_keyboard(user_lang: str = "en"):
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –≤–∏–±–æ—Ä—É –º–æ–¥–µ–ª—ñ –ø–µ—Ä–µ–∫–ª–∞–¥—É"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        InlineKeyboardButton("‚ö° Kaminskyi Basic", callback_data="model_basic"),
        InlineKeyboardButton("üéØ Kaminskyi Epic", callback_data="model_epic")
    )
    return keyboard

def get_language_keyboard(model="basic", page=0):
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –≤–∏–±–æ—Ä—É –º–æ–≤–∏ –∑ –ø–æ–≤–Ω–∏–º —Å–ø–∏—Å–∫–æ–º —Ç–∞ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é"""
    # –í–∏–±–∏—Ä–∞—î–º–æ –º–æ–≤–∏ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –º–æ–¥–µ–ª—ñ
    if model == "basic":
        languages = DEEPL_LANGUAGES
    elif model == "epic":
        languages = OTRANSLATOR_LANGUAGES
    else:
        languages = COMMON_LANGUAGES
    
    # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
    lang_list = []
    for code, name in languages.items():
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–∞–∑–≤—É –∑ –ø—Ä–∞–ø–æ—Ä–æ–º —è–∫—â–æ —î –≤ COMMON_LANGUAGES
        display_name = COMMON_LANGUAGES.get(code, name)
        lang_list.append((code, display_name))
    
    # –°–æ—Ä—Ç—É—î–º–æ –∑–∞ –Ω–∞–∑–≤–æ—é
    lang_list.sort(key=lambda x: x[1])
    
    # –ü–∞–≥—ñ–Ω–∞—Ü—ñ—è - 14 –º–æ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É (7 —Ä—è–¥–∫—ñ–≤ –ø–æ 2)
    per_page = 14
    start_idx = page * per_page
    end_idx = start_idx + per_page
    page_languages = lang_list[start_idx:end_idx]
    
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥–∫—É
    for i in range(0, len(page_languages), 2):
        row_buttons = []
        for j in range(2):
            if i + j < len(page_languages):
                code, name = page_languages[i + j]
                # –û–±—Ä—ñ–∑–∞—î–º–æ –Ω–∞–∑–≤—É —è–∫—â–æ –¥–æ–≤–≥–∞
                if len(name) > 20:
                    button_text = name[:17] + "..."
                else:
                    button_text = name
                row_buttons.append(InlineKeyboardButton(button_text, callback_data=f"lang_{code}"))
        
        if len(row_buttons) == 2:
            keyboard.row(row_buttons[0], row_buttons[1])
        elif len(row_buttons) == 1:
            keyboard.row(row_buttons[0])
    
    # –ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω—ñ –∫–Ω–æ–ø–∫–∏ —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
    total_pages = (len(lang_list) + per_page - 1) // per_page
    if total_pages > 1:
        nav_buttons = []
        if page > 0:
            nav_buttons.append(InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"lang_page_{page-1}"))
        if page + 1 < total_pages:
            nav_buttons.append(InlineKeyboardButton("–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è", callback_data=f"lang_page_{page+1}"))
        
        if nav_buttons:
            keyboard.row(*nav_buttons)
        
        # –ü–æ–∫–∞–∑—É—î–º–æ –Ω–æ–º–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        keyboard.row(InlineKeyboardButton(f"üìÑ {page + 1} / {total_pages}", callback_data="page_info"))
    
    return keyboard

def get_continue_keyboard(user_lang: str = "en"):
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("üîÑ –ù–æ–≤–∏–π –ø–µ—Ä–µ–∫–ª–∞–¥", callback_data="continue_translate"),
        InlineKeyboardButton("üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª", callback_data="upload_file")
    )
    keyboard.add(
        InlineKeyboardButton("üìä –ú–æ—ó –ø–µ—Ä–µ–∫–ª–∞–¥–∏", callback_data="my_translations"),
        InlineKeyboardButton("‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è", callback_data="settings")
    )
    keyboard.add(InlineKeyboardButton("üìû –ü—ñ–¥—Ç—Ä–∏–º–∫–∞", callback_data="contact_support"))
    return keyboard

def get_payment_keyboard(amount: float = None, model: str = None):
    """–†–æ–∑—à–∏—Ä–µ–Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –æ–ø–ª–∞—Ç–∏"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    payment_text = f"üí≥ –°–ø–ª–∞—Ç–∏—Ç–∏ {amount}‚Ç¨" if amount else "üí≥ –û–ø–ª–∞—Ç–∏—Ç–∏"
    keyboard.add(InlineKeyboardButton(payment_text, callback_data="process_payment"))
    
    keyboard.add(InlineKeyboardButton("üìä –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è", callback_data="payment_details"))
    keyboard.add(InlineKeyboardButton("‚ùì –Ø–∫ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –æ–ø–ª–∞—Ç–∞?", callback_data="payment_help"))
    keyboard.add(InlineKeyboardButton("üîÑ –í–∏–±—Ä–∞—Ç–∏ —ñ–Ω—à–∏–π —Ñ–∞–π–ª", callback_data="upload_another"))
    keyboard.add(InlineKeyboardButton("‚öôÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ –º–æ–¥–µ–ª—å", callback_data="change_model"))
    
    return keyboard

def get_file_action_keyboard(file_info: dict = None):
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥—ñ–π –∑ —Ñ–∞–π–ª–æ–º –∑ –¥–µ—Ç–∞–ª—å–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    if file_info and file_info.get('amount'):
        keyboard.add(InlineKeyboardButton(f"üí≥ –°–ø–ª–∞—Ç–∏—Ç–∏ {file_info['amount']}‚Ç¨", callback_data="process_payment"))
    else:
        keyboard.add(InlineKeyboardButton("üí≥ –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –æ–ø–ª–∞—Ç–∏", callback_data="process_payment"))
    
    keyboard.add(InlineKeyboardButton("üìä –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¥–µ—Ç–∞–ª—ñ", callback_data="file_details"))
    keyboard.add(InlineKeyboardButton("‚öôÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ –º–æ–¥–µ–ª—å", callback_data="change_model"))
    keyboard.add(InlineKeyboardButton("üîÑ –Ü–Ω—à–∏–π —Ñ–∞–π–ª", callback_data="upload_another"))
    keyboard.add(InlineKeyboardButton("‚ùì –î–æ–ø–æ–º–æ–≥–∞", callback_data="help"))
    
    return keyboard

def get_payment_action_keyboard():
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥—ñ–π –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(InlineKeyboardButton("üöÄ –ü–æ—á–∞—Ç–∏ –ø–µ—Ä–µ–∫–ª–∞–¥", callback_data="start_translation"))
    keyboard.add(InlineKeyboardButton("üßæ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —á–µ–∫", callback_data="view_receipt"))
    keyboard.add(InlineKeyboardButton("üîÑ –ù–æ–≤–∏–π –ø–µ—Ä–µ–∫–ª–∞–¥", callback_data="upload_another"))
    keyboard.add(InlineKeyboardButton("üìû –ü—ñ–¥—Ç—Ä–∏–º–∫–∞", callback_data="contact_support"))
    return keyboard